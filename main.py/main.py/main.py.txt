import asyncio
import logging

import discord
from discord.ext import commands

from config import load_config, validate_config
from cogs.py.dbpool.dbpool import setup_database_pool
from cogs import setup_ai

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("grazybot")

# Load and validate config
config = load_config()
validate_config(config)

# Initialize Discord bot with intents
intents = discord.Intents.default()
intents.members = True

bot = commands.Bot(command_prefix="/", intents=intents)

async def main():
    # Load AI model and DB pool
    await setup_ai(config)
    bot.db_pool = await setup_database_pool(config)
    
    # Load all cogs
    extensions = [
        "cogs.admin",
        "cogs.bingo",
        "cogs.events",
        "cogs.ge",
        "cogs.osrs",
        "cogs.pb",
        "cogs.pvm",
        "cogs.raffle",
        "cogs.points",
        "cogs.pointstore",
        "cogs.sotw",
    ]
    for ext in extensions:
        try:
            await bot.load_extension(ext)
            logger.info(f"Loaded extension: {ext}")
        except Exception as e:
            logger.error(f"Failed to load extension {ext}: {e}")
    
    # Start the bot
    await bot.start(config["TOKEN"])

if __name__ == "__main__":
    asyncio.run(main())